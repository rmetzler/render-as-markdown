{"name":"RenderAsMarkdown","tagline":"This gem is a Markdown helper that renders well formatted Markdown for bigger Markdown elements like tables","body":"RenderAsMarkdown\n================\n\n\nRenderAsMarkdown is a small Ruby gem featuring simple to use classes to turn\ndata into Markdown.\n\n[![Gem Version](https://badge.fury.io/rb/render-as-markdown.png)](http://badge.fury.io/rb/render-as-markdown)\n[![Build Status](https://travis-ci.org/rmetzler/render-as-markdown.png?branch=master)](https://travis-ci.org/rmetzler/render-as-markdown)\n[![Code Climate](https://codeclimate.com/github/rmetzler/render-as-markdown.png)](https://codeclimate.com/github/rmetzler/render-as-markdown)\n[![Coverage Status](https://coveralls.io/repos/rmetzler/render-as-markdown/badge.png)](https://coveralls.io/r/rmetzler/render-as-markdown)\n[![Dependency Status](https://gemnasium.com/rmetzler/render-as-markdown.png)](https://gemnasium.com/rmetzler/render-as-markdown)\n\nThis project started when [rmetzler](//github.com/rmetzler) tried to render\ndata into a Markdown table. While this was easy to achive with templating, a\ndedicated helper gem was more reuseable and produced output that was also\neasier to scan in ASCII.\n\nUltimately this helper should turn into something like a DSL to create and\nscaffold Markdown documents. In particular it should be very useful to create\nproject documentation files like README.md, TODO.md, LICENSE.md, etc. with it.\nGithub is able to render Markdown as HTML so automatically generated project\ndocumentation could be displayed on http://github.com\n\nSee [Implementation](#implementation) for what's implemented yet.\n\n\nWhat is Markdown?\n-----------------\n\nMarkdown is a (supposed to be) simple markup language that can be written and\nconverted into HTML easily.\n\nIt was [created by John Gruber in December 2004](http://daringfireball.net/projects/markdown/)\nand has grown in popularity since. Developers started to adapt Markdown and\nseveral different Markdown dialects emerged:\n\n- [Original Markdown Syntax](http://daringfireball.net/projects/markdown/syntax)\n- [Github created Github flavored Markdown](http://github.github.com/github-flavored-markdown/)\n- [MultiMarkdown adds features for multiple files](http://fletcherpenney.net/multimarkdown/)\n- [iA Writer uses a slightly different dialect](http://support.iawriter.com/help/kb/general-questions/markdown-syntax-reference-guide)\n\n\nImplementation\n--------------\n\n### Headers\n\nHeaders in Markdown can be written in two different notations. the #-Notation\nwhere you just prepend # for H1, ## for H2, ### for H3 ... up to H5.\nYou get the concept.\n\nAnd there is the underline Notation for H1 (===) and H2 (---). This notation\nis easier to scan in ASCII files, but its not as simple to implement in\nMarkdown templates as the #-notation is. So I wrote two little helpers classes.\n\n\n### Link\n\nLinks in Markdown have a URL, text (optional) and hint (optional).\n\n### Image\n\nImages in Markdown have a URL, an alt text and a hint (optional).\n\n\n### List\n\nLists in Markdown start with a dash and a space in every line.\n\n\n### Code\n\nThere are different notations for Code in Markdown.\nCurrently the implementation just indent every line by 4 spaces.\n\n\n### Table\n\nIt's really easy to render a table in (GHf)MD, but the simplest approach\ndoesn't look that nice in raw mode. That's why there is this simple class,\ntables work in the terminal AND on Github.\n\n```Ruby\n    t = RenderMarkdown::Table.new %w{eins zwei superkalifrageristric}\n    t << %w{hoch-soll-er-leben 3 mal-hoch}\n    puts t.render\n```\n\nrenders the following table\n\n```\n    eins              |zwei|superkalifrageristric\n    ------------------|----|---------------------\n    hoch-soll-er-leben|3   |mal-hoch\n```\n\nThanks to Github, this is also rendered in HTML. Nice!\n\neins              |zwei|superkalifrageristric\n------------------|----|---------------------\nhoch-soll-er-leben|3   |mal-hoch\n","google":"UA-44998391-1","note":"Don't delete this file! It's used internally to help with page regeneration."}